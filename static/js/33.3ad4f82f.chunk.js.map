{"version":3,"file":"static/js/33.3ad4f82f.chunk.js","mappings":"gTAGaA,EAAkB,SAAHC,GAA8B,IAAxBC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAQC,EAAEH,EAAFG,GAC9CC,GAAuCC,EAAAA,EAAAA,MAA0BC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DI,EAAaF,EAAA,GAAIG,EAASH,EAAA,GAATG,UACxB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACMF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACCX,EAAK,MAAIC,MAEZW,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLC,SAAUN,EACVO,QAAS,kBAAMR,EAAcL,EAAG,EAACS,SAEhCH,GAAYI,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CACrBC,OAAQ,GACRC,MAAO,KACJ,QAKf,E,mBCrBaC,EAAoBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uTAe7BC,EAAwBJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8MCbvC,SAASI,EAAW5B,GAEvB,IAF0B6B,EAAQ7B,EAAR6B,SAG5B,OACEhB,EAAAA,EAAAA,KAACO,EAAiB,CAAAR,SACfiB,EAASC,KAAI,SAAAC,GAAO,OACnBlB,EAAAA,EAAAA,KAACY,EAAqB,CAAAb,UACpBC,EAAAA,EAAAA,KAACd,GAAeiC,EAAAA,EAAAA,GAAA,GAAKD,KADKA,EAAQ5B,GAIZ,KAIhC,CChBO,I,MAAM8B,EAAQZ,EAAAA,GAAOa,MAAKX,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJAUpBW,EAAQd,EAAAA,GAAOe,MAAKT,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iPAYpBa,EAAUhB,EAAAA,GAAOiB,IAAGC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2dCtB1B,SAASgB,EAAMxC,GAAsB,IAAnByC,EAAKzC,EAALyC,MAAOC,EAAQ1C,EAAR0C,SAC5B,OACI7B,EAAAA,EAAAA,KAACwB,EAAO,CAAAzB,UACRF,EAAAA,EAAAA,MAACuB,EAAK,CAAArB,SAAA,CAAC,yBAEHC,EAAAA,EAAAA,KAACsB,EAAK,CAACrB,KAAK,OAAO2B,MAAOA,EAAOC,SAAUA,QAIvD,CCTO,IAAMC,EAAOtB,EAAAA,GAAOuB,KAAIrB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+QAclBW,EAAQd,EAAAA,GAAOe,MAAKT,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yOAapBS,EAAQZ,EAAAA,GAAOa,MAAKK,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2D,UCzB1B,SAASqB,EAAW7C,GAEvB,IAF0B8C,EAAQ9C,EAAR8C,SAG1BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAA1C,EAAAA,EAAAA,GAAAwC,EAAA,GAA7B9C,EAAIgD,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAA4BH,EAAAA,EAAAA,UAAS,IAAGI,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAAjCjD,EAAMkD,EAAA,GAAEC,EAASD,EAAA,GAElBE,EAAe,SAAAC,GACjB,IAAAC,EAAwBD,EAAEE,cAAlBxD,EAAIuD,EAAJvD,KAAMwC,EAAKe,EAALf,MACd,OAAQxC,GACJ,IAAK,OACDiD,EAAQT,GACR,MACJ,IAAK,QACDY,EAAUZ,GACV,MACJ,QACI,OAEZ,EAQMiB,EAAa,WACfR,EAAQ,IACRG,EAAU,GACd,EACA,OACI3C,EAAAA,EAAAA,MAACiC,EAAI,CAACG,SAXW,SAAAS,GACjBA,EAAEI,iBACFb,EAAS7C,EAAMC,GACfwD,GACH,EAOgC9C,SAAA,EACzBF,EAAAA,EAAAA,MAACuB,EAAK,CAAArB,SAAA,CAAC,QAEHC,EAAAA,EAAAA,KAACsB,EAAK,CACFM,MAAOxC,EACPyC,SAAUY,EACVxC,KAAK,OACLb,KAAK,OACL2D,MAAM,yIACNC,UAAQ,EACRC,YAAY,qBAGpBpD,EAAAA,EAAAA,MAACuB,EAAK,CAAArB,SAAA,CAAC,UAEHC,EAAAA,EAAAA,KAACsB,EAAK,CACFM,MAAOvC,EACPwC,SAAUY,EACVxC,KAAK,MACLb,KAAK,QACL6D,YAAY,aAEZF,MAAM,+FACNC,UAAQ,QAIhBhD,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASiD,UAAU,oBAC5BnD,SACH,kBAKb,CCoCA,MA5FA,WACE,IAAMoD,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAEhCC,GAAsCC,EAAAA,EAAAA,SAAoBC,EAAW,CACnEC,2BAA2B,IADf3C,EAAQwC,EAAdI,KAAgBhE,EAAS4D,EAAT5D,UAGxBiE,GAGIC,EAAAA,EAAAA,MAAuBC,GAAArE,EAAAA,EAAAA,GAAAmE,EAAA,GAFzBG,EAAUD,EAAA,GAAAE,EAAAF,EAAA,GACKG,GAATD,EAAJL,KAAyBK,EAAnBE,OAGJC,GAHqDH,EAA5BrE,UAGZ,eAAAT,GAAAkF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOpF,EAAMC,GAAM,IAAA6B,EAAA,OAAAoD,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGpC,IAFsB5D,EAAS6D,MAAK,SAACC,GACtC,OAAOA,EAAe1F,KAAK2F,gBAAkB3F,EAAK2F,aACpD,IAEqB,CAADL,EAAAE,KAAA,QAC4B,OAA9CI,EAAAA,GAAMb,MAAM,GAADc,OAAI7F,EAAI,4BAA2BsF,EAAAQ,OAAA,iBAM/C,OAHKhE,EAAU,CACd9B,KAAAA,EACAC,OAAAA,GACDqF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOZ,EAAW9C,GAAS,KAAD,EAAAwD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEzBU,QAAQC,IAAI,QAAOX,EAAAS,IACnBH,EAAAA,GAAMb,MAAMD,EAAaoB,SAAS,yBAAAZ,EAAAa,OAAA,GAAAf,EAAA,mBAErC,gBApBkBgB,EAAAC,GAAA,OAAAtG,EAAAuG,MAAA,KAAAC,UAAA,MAqCbC,EAXuB,WAC3B,GAAK5E,EAGL,OAAOA,EACJ6E,QAAO,SAAC3E,GAAO,OACdA,EAAQ9B,KAAK2F,cAAce,SAASzC,EAAY0B,cAAc,IAE/DgB,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE3G,GAAK0G,EAAE1G,EAAE,GAC/B,CAEyB4G,GAEzB,OACErG,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAImG,MAAO,CAAEC,UAAW,UAAWrG,SAAC,gBACpCC,EAAAA,EAAAA,KAACgC,EAAW,CACVC,SAAUmC,KAGZpE,EAAAA,EAAAA,KAAA,MAAImG,MAAO,CAAEC,UAAW,UAAWrG,SAAC,cACpCC,EAAAA,EAAAA,KAAC2B,EAAM,CAACC,MAAOyB,EAAaxB,SAzBX,SAACa,GACpBS,GAASkD,EAAAA,EAAAA,GAAkB3D,EAAEE,cAAchB,OAC7C,KAwBMhC,IACAI,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CACRkG,aAAc,CACZC,QAAS,QACTC,OAAQ,UAEVC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,aAGxD1F,GAAYpB,IACXI,EAAAA,EAAAA,KAACe,EAAW,CACVC,SAAU4E,KAId5F,EAAAA,EAAAA,KAAC2G,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAId,C","sources":["components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.js","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Filter/Filter.styled.js","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactForm/ContactForm.styled.js","components/Contacts/ContactForm/ContactForm.jsx","pages/Contacts/ContactPage.js"],"sourcesContent":["import { ColorRing } from \"react-loader-spinner\";\r\nimport { useDeleteContactMutation } from \"../../../redux/contacts/contactsApi\";\r\n\r\nexport const ContactListItem = ({ name, number, id }) => {\r\n  const [deleteContact, { isSuccess }] = useDeleteContactMutation();\r\n  return (\r\n    <>        \r\n          <span>\r\n          {name} : {number}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          disabled={isSuccess}\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          {isSuccess ? <ColorRing\r\n            height={12}\r\n            width={12}\r\n          /> : \"x\"}\r\n          \r\n        </button>\r\n    </>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const ContactListStyled = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    border: 1px solid #000;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nexport const ContactListItemStyled = styled.li`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #000;\r\n    &:last-child {\r\n        border-bottom: none;\r\n    }\r\n`","import { ContactListItem } from \"../ContactListItem/ContactListItem\";\r\nimport { ContactListStyled, ContactListItemStyled } from \"./ContactList.styled\";\r\n\r\n\r\nexport function ContactList({ contacts,\r\n  // onDelete\r\n}) {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(contact => (\r\n        <ContactListItemStyled key={contact.id}>\r\n          <ContactListItem {...contact}\r\n            // onDelete={onDelete}\r\n          />              \r\n        </ContactListItemStyled>  \r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 15px;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    color: #000;\r\n\r\n`\r\n\r\nexport const Input = styled.input`\r\n    padding: 5px;\r\n    border: 1px solid #000;\r\n    border-radius: 5px;\r\n    font-size: 20px;\r\n    &:focus {\r\n        outline: none;\r\n        border-color: #0000ff;\r\n        box-shadow: 0px 0px 10px 0px rgba(0,0,255,0.75);\r\n    }\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\nwidth: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    margin-bottom: 15px;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    color: #000;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px;\r\n    border: 1px solid #000;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);\r\n    &:hover {\r\n        box-shadow: 0px 0px 10px 0px rgba(0,0,255,0.75);\r\n    }\r\n`","import { Input, Label, Wrapper } from \"./Filter.styled\";\r\n\r\nexport function Filter ({value, onChange}) {\r\n    return (\r\n        <Wrapper>\r\n        <Label>\r\n            Find contacts by name\r\n            <Input type=\"text\" value={value} onChange={onChange}/>\r\n        </Label>\r\n        </Wrapper>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 170px;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    border: 1px solid #000;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\r\n    background-color: #fff;\r\n    \r\n`\r\n\r\nexport const Input = styled.input`\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    border: 1px solid #000;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    &:focus {\r\n        border: 1px solid #000;\r\n        box-shadow: 0 0 10px rgba(0,0,0,0.5);\r\n    }\r\n\r\n`\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n`","import { Form, Input, Label } from './ContactForm.styled';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport function ContactForm({ onSubmit,\r\n    // isSuccess\r\n}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => { \r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'phone':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        resetInput();\r\n     };\r\n\r\n    const resetInput = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Label>\r\n                Name\r\n                <Input\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"                   \r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required                    \r\n                    placeholder='Adrian Smith'\r\n                    />\r\n            </Label>\r\n            <Label>\r\n                Number\r\n                <Input\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    placeholder=\"0501111111\"                    \r\n                    \r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n\r\n                />    \r\n            </Label>\r\n            <button type=\"submit\" className=\"contact-form__btn\"\r\n                // disabled={!isSuccess}\r\n            >\r\n            Add contact\r\n        </button>\r\n        </Form>\r\n    );\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterSelector } from \"../../redux/contacts/selectors/selectors\";\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from \"../../redux/contacts/contactsApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { changeFilterValue } from \"../../redux/contacts/filterSlice\";\r\nimport { ContactList } from \"../../components/Contacts/ContactList/ContactList\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport { Filter } from \"../../components/Contacts/Filter/Filter\";\r\nimport { ContactForm } from \"../../components/Contacts/ContactForm/ContactForm\";\r\n\r\nfunction ContactPage() {\r\n  const dispatch = useDispatch();\r\n  const filterValue = useSelector(filterSelector);\r\n\r\n  const { data: contacts, isSuccess } = useGetContactsQuery(undefined, {\r\n    refetchOnMountOrArgChange: true,\r\n  });\r\n  const [\r\n    addContact,\r\n    { data, error: contactError, isSuccess: addContactSuccess },\r\n  ] = useAddContactMutation();\r\n\r\n  const createContact = async (name, number) => {\r\n    const dublicateContact = contacts.some((checkedContact) => {\r\n      return checkedContact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (dublicateContact) {\r\n      toast.error(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    try {\r\n      await addContact(contact);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      toast.error(contactError.message);\r\n    }\r\n  };\r\n\r\n  const changeFilter = (e) => {\r\n    dispatch(changeFilterValue(e.currentTarget.value));\r\n  };\r\n\r\n  const changeFilterContacts = () => {\r\n    if (!contacts) {\r\n      return;\r\n    }\r\n    return contacts\r\n      .filter((contact) =>\r\n        contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n      )\r\n      .sort((a, b) => b.id - a.id);\r\n  };\r\n\r\n  const filteredContacts = changeFilterContacts();\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}> Phonebook</h1>\r\n      <ContactForm\r\n        onSubmit={createContact}\r\n        // isSuccess={addContactSuccess}\r\n      />\r\n      <h2 style={{ textAlign: \"center\" }}>Contacts</h2>\r\n      <Filter value={filterValue} onChange={changeFilter} />\r\n      {!isSuccess && (\r\n        <ColorRing\r\n          wrapperStyle={{\r\n            display: \"block\",\r\n            margin: \"0 auto\",\r\n          }}\r\n          wrapperClass=\"blocks-wrapper\"\r\n          colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\r\n        />\r\n      )}\r\n      {contacts && isSuccess && (\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          // onDelete={handleDeleteContact}\r\n        />\r\n      )}\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactPage;\r\n"],"names":["ContactListItem","_ref","name","number","id","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","_slicedToArray","deleteContact","isSuccess","_jsxs","_Fragment","children","_jsx","type","disabled","onClick","ColorRing","height","width","ContactListStyled","styled","ul","_templateObject","_taggedTemplateLiteral","ContactListItemStyled","li","_templateObject2","ContactList","contacts","map","contact","_objectSpread","Label","label","Input","input","Wrapper","div","_templateObject3","Filter","value","onChange","Form","form","ContactForm","onSubmit","_useState","useState","_useState2","setName","_useState3","_useState4","setNumber","handleChange","e","_e$currentTarget","currentTarget","resetInput","preventDefault","title","required","placeholder","className","dispatch","useDispatch","filterValue","useSelector","filterSelector","_useGetContactsQuery","useGetContactsQuery","undefined","refetchOnMountOrArgChange","data","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","addContact","_useAddContactMutatio3","contactError","error","createContact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","some","checkedContact","toLowerCase","toast","concat","abrupt","t0","console","log","message","stop","_x","_x2","apply","arguments","filteredContacts","filter","includes","sort","a","b","changeFilterContacts","style","textAlign","changeFilterValue","wrapperStyle","display","margin","wrapperClass","colors","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}